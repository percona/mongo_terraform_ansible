# Note:
# Consider overriding all the following variables at Ansible runtime via --extra-vars
# - keyfile_content
# - encryption_key_content (if using encryption at rest)
# - vault_tokenfile_content (if using Hashicorp Vault)
# - pmm_server_pwd
# - pmm_user_pwd
# - pbmpwd
# - access_key_id (used for accesing S3 bucket for Backups)
# - secret_access_key (used for accesing S3 bucket for Backups)

##################
## General configuration
##################

percona_key_location: https://downloads.percona.com/downloads/RPM-GPG-KEY-percona
percona_repo: https://repo.percona.com/yum/percona-release-latest.noarch.rpm

# MongoDB version as per "percona-release". Avaiability of MongoDB version depending on OS version.
# e.g. -> Available repositories for centos7: psmdb-36 psmdb-40 psmdb-42 psmdb-44 psmdb-50 psmdb-60
mongo_release: psmdb-70

# copy rpm files from a local path. If false yum will be used to download from a configured repository
copy_files: false

# only relevant if copy_files: false
packages:
  - percona-server-mongodb
  - percona-backup-mongodb
  - pmm2-client

router_packages:
# to be removed when we add logic to create user, group, dir, etc. for mongos
   - percona-server-mongodb
   - percona-server-mongodb-mongos
   - percona-server-mongodb-shell
   - pmm2-client
   
# where to copy rpms from if copy_files:true. We need to have pbm, pmm-client and percona-server-mongodb available on this directory
local_rpm_location: /home/ec2-user/mongo/

# where to copy rpm files to
target_rpm_location: /tmp/

mongo_root_password: percona

cfg_server_port: 27019
shard_port: 27018
mongos_port: 27017
replicaset_port: 27017

mongod_log_path: /var/log/mongo/
mongod_path: /var/lib/mongo/

thp_location: /usr/lib/systemd/system/disable-thp.service

##################
## Authentication 
##################

# use_tls: true/false
use_tls: false

# only relevant if use_tls: false
keyFile_location: /var/lib/mongo/keyfile

# Run openssl rand -base64 741 if you want to generate a new one
keyfile_content: |
  8pYcxvCqoe89kcp33KuTtKVf5MoHGEFjTnudrq5BosvWRoIxLowmdjrmUpVfAivh
  CHjqM6w0zVBytAxH1lW+7teMYe6eDn2S/O/1YlRRiW57bWU3zjliW3VdguJar5i9

# next 2 only relevant if use_tls: true
certificateKeyFile: /tmp/server.pem
CAFile: /tmp/mongo-ca.pem

################
## Encryption
###############
# keyfile_encryption: true/false
keyfile_encryption: false
encryption_key_content: |
  vvMTZ3dnSbG7wc6DkPpt+rp3Cc+jF8lJsYlq6QE1yEM=
# path to the keyfile to encrypt
encryption_keyfile: /opt/mongodb.key

# vault_encryption: true/false - set to true to use Hashicorp Vault instead of local keyfile
vault_encryption: false
vault_server: vault.example.com
vault_port: 8200
# path to the token used by MongoDB to access Vault
vault_tokenfile: /etc/mongodb/token
vault_tokenfile_content: |
  s.uTrHtzsZnEE7KyHeA797CkWA
vault_cafile: /etc/mongodb/vault.crt
# path to the secret within Vault
vault_secret: secret/data/dc/psmongodb1

##################
## PMM 
#################

pmm_version: latest

# server parameters
pmm_dir: /var/lib/docker
pmm_server_user: admin
pmm_server_pwd: admin

# client parameters
mongodb_pmm_user: mongodb_exporter
mongodb_pmm_user_pwd: percona

# only applicable for sharded clusters
cluster_name: dev

###############
## PBM
###############

pbmuser: pbm
pbmpwd: secretpwd

# backup location - set true for locally mounted NFS drive or false for S3-compatible storage bucket
pbm_local: false

# only relevant if pbm_local: true
pbm_path: /backup

# only relevant if pbm_local: false
region: northamerica-northeast1
bucket: dev-mongo-backups
prefix: pbm/test
endpointUrl: https://storage.googleapis.com
# these are best provided via --extra-vars at runtime
#access_key_id: *****
#secret_access_key: *****
