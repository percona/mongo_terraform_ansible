---
- hosts: cfg:shards:replsets
  gather_facts: false
  become: yes
  tasks:
    - name: wipe arbiter directory contents
      shell: rm -rf {{ mongod_path }}/*
      when: arbiter is defined

     - name: restart mongod service
       systemd:
         name: "{{ item }}"
         state: restarted
       with_items:
         - mongod

     - name: restart pbm service
       systemd:
         name: "{{ item }}"
         state: restarted
       with_items:
          - pbm-agent
       when: arbiter is not defined

     - name: figure out the Mongo TLS options
       set_fact:
         mongo_uri_tls: "/?tls=true&tlsCertificateKeyFile={{ certificateKeyFile }}&tlsCAFile={{ CAFile }}"
       when: use_tls | bool

- hosts: mongos
  become: yes
  gather_facts: false
  tasks:
    - name: restart mongos service
      systemd:
        name: mongos
        state: restarted

- hosts: cfg
  become: yes
  gather_facts: false
  tasks:
    - name: generate PBM_MONGODB_URI
      set_fact:
        mongodb_uri: "mongodb://{{ pbmuser }}:{{ pbmpwd }}@{% for h in groups[ 'cfg' ] %}{{ h }}:{{ cfg_server_port }}{% if not loop.last %},{% endif %}{% endfor %}/?replicaSet={{ cluster }}-cfg&authSource=admin{{ mongo_uri_tls | default('') }}"

    - name: resync pbm storage
      shell: pbm config --force-resync --mongodb-uri '{{ mongodb_uri }}'
  run_once: true

- hosts: replsets
  become: yes
  gather_facts: false
  tasks:
    - name: generate PBM_MONGODB_URI
      set_fact:
        mongodb_uri: "mongodb://{{ pbmuser }}:{{ pbmpwd }}@{% for h in groups[ group_names[0] ] %}{{ h }}:{{ replicaset_port }}{% if not loop.last %},{% endif %}{% endfor %}/?replicaSet={{ cluster }}-{{ group_names[0] }}&authSource=admin{{ mongo_uri_tls | default('') }}"

    - name: resync pbm storage
      shell: pbm config --force-resync --mongodb-uri '{{ mongodb_uri }}'
  run_once: true

- hosts: cfg:shards:replsets:mongos
  become: yes
  gather_facts: false
  tasks:
    - name: restart pmm service
      systemd:
        name: "{{ item }}"
        state: restarted
      with_items:
        - pmm-agent
